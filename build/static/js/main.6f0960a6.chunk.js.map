{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","step","setState","slice","length","calculateWinner","concat","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wOAKA,SAASA,EAAQC,GACb,OACI,wBACIC,UAAU,SACVC,QAASF,EAAME,QAFnB,SAIGF,EAAMG,Q,IAKTC,E,2KAESC,GAAI,IAAD,OACd,OAAO,cAACN,EAAD,CACGI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAKhD,OACC,gCACC,sBAAKJ,UAAU,YAAf,UACCK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEnB,sBAAKP,UAAU,YAAf,UACCK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEnB,sBAAKP,UAAU,YAAf,UACCK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAzBDC,IAAMC,WAgCrBC,E,kDACL,WAAYX,GAAO,IAAD,8BACjB,cAAMA,IACDY,MAAO,CACXC,QAAS,CACR,CACCN,QAASO,MAAM,GAAGC,KAAK,QAGzBC,SAAS,EACTC,WAAY,GATI,E,mDAaXC,GACNZ,KAAKa,SAAS,CACbF,WAAYC,EACZF,QAAUE,EAAO,IAAO,M,kCAIdb,GACX,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQO,MAAM,EAAGd,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQQ,OAAS,GACjBd,QAAQa,QAC7BE,EAAgBf,IAAYA,EAAQF,KAGvCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAK,IACvCV,KAAKa,SAAS,CACbN,QAASA,EAAQU,OAAO,CAAC,CACxBhB,QAASA,KAEVS,SAAUV,KAAKM,MAAMI,QACrBC,WAAYJ,EAAQQ,Y,+BAIZ,IAkBLG,EAlBI,OACFX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMK,YAC7BS,EAASJ,EAAgBG,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACV,EAAMW,GAChC,IAAMC,EAAOD,EAAO,YAAcA,EAAO,WACzC,OACC,6BACC,wBACC3B,QAAW,kBAAM,EAAK6B,OAAOF,IAD9B,SAGEC,KAJMD,MAiBX,OALCL,EADEE,EACO,aAAeA,EAElB,uBAAmBpB,KAAKM,MAAMI,QAAS,IAAK,KAIlD,sBAAKf,UAAU,OAAf,UACA,qBAAKA,UAAU,aAAf,SACC,cAACG,EAAD,CACCG,QAASkB,EAAQlB,QACjBL,QAAU,SAACG,GAAD,OAAO,EAAK2B,YAAY3B,QAGpC,sBAAKJ,UAAU,YAAf,UACC,8BAAMuB,IACN,6BAAKG,c,GAzEUlB,IAAMC,WAgF1B,SAASY,EAAgBf,GAWrB,IAVA,IAAM0B,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEF5B,EAAI,EAAGA,EAAI4B,EAAMZ,OAAQhB,IAAK,CAAC,IAAD,cACjB4B,EAAM5B,GADW,GAC5B6B,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GAClE,OAAO7B,EAAQ2B,GAGvB,OAAO,KAKTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.6f0960a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nfunction Square (props){\r\n    return (\r\n        <button \r\n            className=\"square\" \r\n            onClick={props.onClick}\r\n        >\r\n          {props.value}\r\n        </button>\r\n    );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n      return <Square \r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />;\r\n    }\r\n  \r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t{this.renderSquare(0)}\r\n\t\t\t\t{this.renderSquare(1)}\r\n\t\t\t\t{this.renderSquare(2)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t{this.renderSquare(3)}\r\n\t\t\t\t{this.renderSquare(4)}\r\n\t\t\t\t{this.renderSquare(5)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t{this.renderSquare(6)}\r\n\t\t\t\t{this.renderSquare(7)}\r\n\t\t\t\t{this.renderSquare(8)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n  }\r\n  \r\n\tclass Game extends React.Component {\r\n\t\tconstructor(props){\r\n\t\t\tsuper(props);\r\n\t\t\tthis.state ={\r\n\t\t\t\thistory: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsquares: Array(9).fill(null),\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\txIsNext: true,\r\n\t\t\t\tstepNumber: 0\r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\t\tjumpTo(step){\r\n\t\t\tthis.setState({\r\n\t\t\t\tstepNumber: step,\r\n\t\t\t\txIsNext: (step % 2) === 0,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\thandleClick(i){\r\n\t\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n\t\t\tconst current = history[history.length - 1];\r\n\t\t\tconst squares = current.squares.slice();\r\n\t\t\tif(calculateWinner(squares) || squares[i]){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsquares[i] = this.state.xIsNext ? 'X': 'O';\r\n\t\t\tthis.setState({\r\n\t\t\t\thistory: history.concat([{\r\n\t\t\t\t\tsquares: squares,\r\n\t\t\t\t}]),\r\n\t\t\t\txIsNext: !this.state.xIsNext,\r\n\t\t\t\tstepNumber: history.length,\r\n\t\t\t});\r\n\t\t}\r\n\t\t\t\r\n\t\trender() {\r\n\t\t\tconst history = this.state.history;\r\n\t\t\tconst current = history[this.state.stepNumber];\r\n\t\t\tconst winner = calculateWinner(current.squares);\r\n\r\n\t\t\tconst moves = history.map((step, move) => {\r\n\t\t\t\tconst desc = move ? `Move to #` + move : \"To start\"\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li key={move}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick = {() => this.jumpTo(move)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{desc}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tlet status;\r\n\t\t\tif(winner){\r\n\t\t\t\tstatus = 'Winner is ' + winner;\r\n\t\t\t} else {\r\n\t\t\t\tstatus = `Next player: ${this.state.xIsNext? 'X': 'O'}`;\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t\t<Board \r\n\t\t\t\t\t\tsquares={current.squares}\r\n\t\t\t\t\t\tonClick ={(i) => this.handleClick(i)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{status}</div>\r\n\t\t\t\t\t<ol>{moves}</ol>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}